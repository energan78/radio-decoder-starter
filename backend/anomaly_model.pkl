import joblib

ANOMALY_MODEL_PATH = "backend/anomaly_model.pkl"
anomaly_model = None
if config.get("use_anomaly_detector", False):
    try:
        anomaly_model = joblib.load(ANOMALY_MODEL_PATH)
    except Exception as e:
        logger.error(f"Не удалось загрузить модель аномалий: {e}")

@app.post("/detect_anomaly")
async def detect_anomaly(file: UploadFile = File(...)):
    if not config.get("use_anomaly_detector", False):
        return {"enabled": False, "anomaly": None, "message": "Детектор аномалий отключён"}
    try:
        content = await file.read()
        iq_data = np.frombuffer(content, dtype=np.complex64)
        X = np.abs(iq_data[:1024]).reshape(1, -1)
        pred = anomaly_model.predict(X)[0]
        is_anomaly = pred == -1
        return {"enabled": True, "anomaly": bool(is_anomaly)}
    except Exception as e:
        return {"error": str(e)}